AWSTemplateFormatVersion: "2010-09-09"
Description: ECS cluster for worker web app

Parameters:
  EnvironmentName:
    Default: alpha
    Description: Name of the environment this cloudformation stack belongs to
    Type: String

  EnvironmentType:
    Default: nonproduction
    Description: Type of the environment for this stack
    Type: String
    AllowedValues:
      - nonproduction
      - production

Resources:
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: wwa-ecs-services
      Subnets:
      - Fn::ImportValue:
          !Join [ "", [ !Ref EnvironmentName, ":SubnetAZ1Public" ]]
      - Fn::ImportValue:
          !Join [ "", [ !Ref EnvironmentName, ":SubnetAZ2Public" ]]
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      LoadBalancerAttributes:
        - Key: access_logs.s3.enabled
          Value: 'true'
        - Key: access_logs.s3.bucket
          Value: !ImportValue BucketLoadBalancer

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroup

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for loadbalancer to services on ECS
      VpcId:
        Fn::ImportValue:
          !Join [ "", [ !Ref EnvironmentName, ":VPC" ]]
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1

  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
     VpcId:
        Fn::ImportValue:
          !Join [ "", [ !Ref EnvironmentName, ":VPC" ]]
     GroupDescription: Container security group for ecs containers
     SecurityGroupIngress:
       - SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup
         IpProtocol: '-1'

  DefaultTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: wwa-default
      VpcId:
        Fn::ImportValue:
          !Join [ "", [ !Ref EnvironmentName, ":VPC" ]]
      Protocol: HTTP
      Port: 80

  WorkerWebAppECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: WorkerWebAppECSCluster

Outputs:
  LoadBalancerDNS:
    Description: Domain name for the loadbalancer
    Value: !GetAtt LoadBalancer.DNSName
    Export:
      Name: !Join [':', [ !Ref EnvironmentName, WorkerWebAppDomainName ]]
  WorkerWebAppECSCluster:
    Description: ECS Cluster
    Value: !Ref WorkerWebAppECSCluster
    Export:
      Name: !Join [':', [ !Ref EnvironmentName, WorkerWebAppECSCluster ]]
  ContainerSecurityGroup:
    Description: ECS Cluster container security group
    Value: !Ref LoadBalancerSecurityGroup
    Export:
      Name: !Join [':', [ !Ref EnvironmentName, WorkerWebAppContainerSecurityGroup ]]
  LoadBalancerListener:
    Description: LoadBalancer listener
    Value: !Ref LoadBalancerListener
    Export:
      Name: !Join [':', [ !Ref EnvironmentName, WorkerWebAppLoadBalancerListener ]]
